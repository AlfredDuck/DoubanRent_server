//
/*
*编辑沙发的前端逻辑
*/

/*
编辑沙发页面，在最终提交时，会向后端传递一个JSON
所以前端的工作是通过跟用户的交互，最终获得一个JSON
交互流程：
1.用户选择城市和区县
2.用户输入街道门牌号
3.用户点击确认，创建地图，逆解析用户地址，得到位置坐标（判断是否能解析到，否则提示扩大范围重试）
4.若用户点击“是我的位置”，则记录位置坐标和位置描述，继续6流程
5.若用户点击“不是我的位置”，则销毁地图，并提示重新输入，重走3流程
6.地址信息固化，给一个[编辑]按钮
7.输入其他信息，在点击提交时验证JSON完整性
*/

$(document).ready(function(){
   var the_sofa = {};  //构建一个全局JSON结构，使用后销毁
   var $map_container = $("#map_container");
   $map_container.hide();
   
   //点击确认按钮，创建地图，并逆解析地址，在地图上标出位置
   $("#city_1 #s_button").bind("click", function(){
      $map_container.show();
      var map = new BMap.Map("map_container");    //创建地图实例
      startMap(map);                              //获得用户当前位置，并初始化地图
      getPoint(map, the_sofa);                    //获取用户位置坐标和位置描述
   });
   
   //点击提交按钮时
   submit(the_sofa);
});

//提交修改，验证JSON文档完整性，
function submit(the_sofa){
   $("#sofa_infor #submit").bind("click", function(){
      var $information = $("#sofa_infor #information");
      //var $information_err = $("#sofa_infor #information_err");
      //var $deadline = $("#sofa_infor #deadline");
      //var $necessary_one = $("#sofa_infor #necessary_one");
      //var $necessary_two = $("#sofa_infor #necessary_two");
      //var $necessary_three = $("#sofa_infor #necessary_three");
      
      //选填项处理
      //deadline的逻辑处理
      /*
      if($deadline.val() === ""){
         the_sofa.deadline = null;
      }else{
         the_sofa.deadline = $deadline.val();
      }
      */
      //necessary的逻辑处理
      /*
      if($necessary_one.val() === ""){
         the_sofa.necessary_one = null;
      }else{
         the_sofa.necessary_one = $necessary_one.val();
      }
      if($necessary_two.val() === ""){
         the_sofa.necessary_two = null;
      }else{
         the_sofa.necessary_two = $necessary_two.val();
      }
      if($necessary_three.val() === ""){
         the_sofa.necessary_three = null;
      }else{
         the_sofa.necessary_three = $necessary_three.val();
      }
      */
      //必填项处理
      //information的逻辑处理
      if($information.val() === ""){
         alert("请介绍一下您的沙发吧");
      }
      else if(!the_sofa.point){
         alert("请确认您的位置");
      }
      else{
         the_sofa.information = $information.val();
         //alert(the_sofa.information + the_sofa.point);
         //发送post
         $.post("/edit_sofa", the_sofa, function(data){
            //alert(data);
            if(data){
               window.location.href = "/user/" + data;
            }
         });
      }
   });
}

/*获得用户当前位置，并初始化地图*/
function startMap(map){
  //获取用户所在城市
  var myCity = new BMap.LocalCity();
  /*地图控件*/
  map.addControl(new BMap.NavigationControl({type: BMAP_NAVIGATION_CONTROL_ZOOM}));   //平移缩放控件
}

//获取用户的位置坐标和位置描述 point & location
function getPoint(map, the_sofa){
   //检查省市区和街道地址是否都填写，若是则逆解析为坐标point
   var area = new Array();
      //因为select控件里的值是动态写入的，所以需要重新获取一次dom tree
      $(document).ready(function(){
         var province = $("#city_1 #s_province").val();
         var city = $("#city_1 #s_city").val();
         var country = $("#city_1 #s_county").val();
         var street = $("#city_1 #s_street").val();
         alert("全部输入:" + province + city + country + street);
         //检查是否完整输入了省市区
         if(province == "省份"){
         }
         else if(city == "地级市"){
            area.push(province);
         }
         else if(country == "市、县级市"){
            area.push(province);
            area.push(city);
         }
         else if((street == "") || (street == "街道地址")){
            area.push(province);
            area.push(city);
            area.push(country);
         }
         else{
            area.push(province);
            area.push(city);
            area.push(country);
            area.push(street);
         }
         alert("数组结构:" + area);
         //如果输入完整，则逆解析
         if(area.length == 4){
            //area最终会被清空，所以不能一直保存地址信息
            var yourLocation = new Array();
            yourLocation = area;
            /*将输入地址转化为坐标并显示在地图上*/
            // 创建地址解析器实例   
            var myGeo = new BMap.Geocoder();
            // 将地址解析结果显示在地图上，并调整地图视野
            myGeo.getPoint(area[1]+area[2]+area[3], function(point){    
               if (point) {
                  //point是一个对象，具体结构不清楚，使用下面的方法获取经纬坐标
                  var xy = new Array();
                  xy.push(point.lng);//经度
                  xy.push(point.lat);//纬度
                  alert(xy);
                  //为the_sofa添加location和point属性
                  the_sofa.location = yourLocation;
                  the_sofa.point = xy;
                  alert(the_sofa.point + 'aaa' + yourLocation.length);
                  
                  map.centerAndZoom(point, 16);
                  map.addOverlay(new BMap.Marker(point));
                  //打开信息窗口
                  littleWindow(map, point);
               }else{
                  alert("无法找到您的位置，试着换一个附近的地址呢？");
               }
            }, area[1]);
         }
      });
   //将数组清空，防止多次area.push
   area = [];
   return the_sofa;
}

/*地图信息窗口和其中的一些操作*/
function littleWindow(map, point){
   var opts = '<h3>已经找到您的位置</h3>'+
              '<p>如果位置不对，请换一个附近的地址试试：）</p>';
   // 创建信息窗口对象
   var infoWindow = new BMap.InfoWindow(opts);
   // 打开信息窗口
   map.openInfoWindow(infoWindow, point);
}












